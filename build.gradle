// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        kotlin_version = '1.3.70'
        navigation_version = '2.1.0'
        fragment_version = "1.2.3"
    }
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.gms:google-services:4.3.3'
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$navigation_version"
        classpath 'com.dicedmelon.gradle:jacoco-android:0.1.4'
    }
}

plugins {
    id("io.gitlab.arturbosch.detekt").version("1.1.1")
}

detekt {
    toolVersion = "1.1.1"
    input = files("app/src/main/java")
    config = files("detekt.yml")
    reports {
        html {
            enabled = true
            destination = file("app/build/reports/destination.html")
        }
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }

    def lifecycle_version = '2.2.0'
    def gms_version = '17.0.0'
    def androidx_version = '1.1.0'
    def material_version = '1.1.0'
    def room_version = '2.2.3'
    def koin_version = '2.0.1'
    def mockk_version = '1.9.3'
    def espresso_version = '3.2.0'
    def robolectric_version = '4.3'
    def arch_version = '1.1.1'

    ext {
        androidxLibs = [
                appcompat         : "androidx.appcompat:appcompat:$androidx_version",
                androidxCore      : "androidx.core:core-ktx:$androidx_version",
                androidxLegacy    : 'androidx.legacy:legacy-support-v4:1.0.0',
                lifecycle         : "androidx.lifecycle:lifecycle-extensions:$lifecycle_version",
                lifecycleCommon   : "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version",
                navigationFragment: "androidx.navigation:navigation-fragment-ktx:$navigation_version",
                navigationUi      : "androidx.navigation:navigation-ui-ktx:$navigation_version",
                roomRuntime       : "androidx.room:room-runtime:$room_version",
                room              : "androidx.room:room-ktx:$room_version"
        ]

        kotlinLibs = [
                kotlinStdlib : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version",
                kotlinReflect: "org.jetbrains.kotlin:kotlin-reflect:1.3.61"
        ]

        uiLibs = [
                material        : "com.google.android.material:material:$material_version",
                constraintlayout: 'androidx.constraintlayout:constraintlayout:1.1.3',
                stepper         : "com.stepstone.stepper:material-stepper:4.3.1",
                spectrum        : 'com.thebluealliance:spectrum:0.7.1',
        ]

        googleLibs = [
                playservices      : "com.google.android.gms:play-services-maps:$gms_version",
                googleplayservices: "com.google.android.gms:play-services-location:$gms_version",
                googleplaycore    : 'com.google.android.play:core:1.6.4',
                firestore         : 'com.google.firebase:firebase-firestore:21.3.1'
        ]

        androidKaptLibs = [
                roomCompiler: "androidx.room:room-compiler:$room_version"
        ]

        extraToolsLibs = [
                koin  : "org.koin:koin-android-viewmodel:$koin_version",
                dexter: 'com.karumi:dexter:6.0.1'
        ]

        testLibs = [
                junit          : 'junit:junit:4.12',
                mockitoKotlin  : "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0",
                mockitoInline  : "org.mockito:mockito-inline:2.28.2",
                mockk          : "io.mockk:mockk:$mockk_version",
                koinTest       : "org.koin:koin-test:$koin_version",
                robolectric    : "org.robolectric:robolectric:$robolectric_version",
                testCore       : 'androidx.test:core:1.2.0',
                testTruth      : 'androidx.test.ext:truth:1.0.0',
                thruth         : 'com.google.truth:truth:0.42',
                espresso       : "androidx.test.espresso:espresso-core:$espresso_version",
                rules          : 'androidx.test:rules:1.2.0',
                extJunit       : 'androidx.test.ext:junit-ktx:1.1.1',
                archCoreTesting: "android.arch.core:core-testing:$arch_version",
                fragment       : "androidx.fragment:fragment:$fragment_version",
                espressoIdling : "androidx.test.espresso:espresso-idling-resource:$espresso_version"
        ]

        androidTestLibs = [
                junit          : 'junit:junit:4.12',
                mockitoKotlin  : "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0",
                mockitoInline  : "org.mockito:mockito-inline:2.28.2",
                mockk          : "io.mockk:mockk:$mockk_version",
                testCore       : 'androidx.test:core:1.2.0',
                espresso       : "androidx.test.espresso:espresso-core:$espresso_version",
                rules          : 'androidx.test:rules:1.2.0',
                extJunit       : 'androidx.test.ext:junit-ktx:1.1.1',
                archCoreTesting: "android.arch.core:core-testing:$arch_version",
                fragment       : "androidx.fragment:fragment:$fragment_version",
                espressoIdling : "androidx.test.espresso:espresso-idling-resource:$espresso_version"
        ]
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
